I0404 16:34:36.096388  4509 caffe_double.cpp:211] Use CPU.
I0404 16:34:36.096902  4509 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 600
base_lr: 0.1
display: 600
max_iter: 18000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
solver_mode: CPU
net_param {
  name: "LeNet"
  layer {
    name: "mnist"
    type: "Data"
    top: "data"
    top: "label"
    include {
      phase: TRAIN
    }
    transform_param {
      scale: 0.00390625
    }
    data_param {
      source: "data/mnist_train_lmdb"
      batch_size: 100
      backend: LMDB
    }
  }
  layer {
    name: "mnist"
    type: "Data"
    top: "data"
    top: "label"
    include {
      phase: TEST
    }
    transform_param {
      scale: 0.00390625
    }
    data_param {
      source: "data/mnist_test_lmdb"
      batch_size: 100
      backend: LMDB
    }
  }
  layer {
    name: "ip1"
    type: "InnerProduct"
    bottom: "data"
    top: "ip1"
    inner_product_param {
      num_output: 1000
      weight_filler {
        type: "gaussian"
        mean: 0
        std: 0.01
      }
    }
    bias_param {
      filler {
        value: 0
      }
    }
    fixed_precision: true
    precision {
      enter: 1
      fraccio: 9
      rounding: "stochastic"
    }
  }
  layer {
    name: "relu1"
    type: "ReLU"
    bottom: "ip1"
    top: "ip1"
    fixed_precision: true
    precision {
      enter: 1
      fraccio: 9
      rounding: "stochastic"
    }
  }
  layer {
    name: "ip2"
    type: "InnerProduct"
    bottom: "ip1"
    top: "ip2"
    inner_product_param {
      num_output: 1000
      weight_filler {
        type: "gaussian"
        mean: 0
        std: 0.01
      }
    }
    bias_param {
      filler {
        value: 0
      }
    }
    fixed_precision: true
    precision {
      enter: 1
      fraccio: 9
      rounding: "stochastic"
    }
  }
  layer {
    name: "relu2"
    type: "ReLU"
    bottom: "ip2"
    top: "ip2"
    bias_param {
      filler {
        value: 0
      }
    }
    fixed_precision: true
    precision {
      enter: 1
      fraccio: 9
      rounding: "stochastic"
    }
  }
  layer {
    name: "ip3"
    type: "InnerProduct"
    bottom: "ip2"
    top: "ip3"
    inner_product_param {
      num_output: 10
      weight_filler {
        type: "gaussian"
        mean: 0
        std: 0.01
      }
    }
    bias_param {
      filler {
        value: 0
      }
    }
    fixed_precision: true
    precision {
      enter: 1
      fraccio: 9
      rounding: "stochastic"
    }
  }
  layer {
    name: "accuracy"
    type: "Accuracy"
    bottom: "ip3"
    bottom: "label"
    top: "accuracy"
  }
  layer {
    name: "loss"
    type: "SoftmaxWithLoss"
    bottom: "ip3"
    bottom: "label"
    top: "loss"
    fixed_precision: true
    precision {
      enter: 1
      fraccio: 9
      rounding: "stochastic"
    }
  }
}
train_state {
  level: 0
  stage: ""
}
fixed_precision: true
precision {
  enter: 1
  fraccio: 9
  rounding: "stochastic"
}
I0404 16:34:36.096956  4509 solver.cpp:82] Creating training net specified in net_param.
I0404 16:34:36.097007  4509 net.cpp:294] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0404 16:34:36.097152  4509 net.cpp:51] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "data/mnist_train_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.01
    }
  }
  bias_param {
    filler {
      value: 0
    }
  }
  fixed_precision: true
  precision {
    enter: 1
    fraccio: 9
    rounding: "stochastic"
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
  fixed_precision: true
  precision {
    enter: 1
    fraccio: 9
    rounding: "stochastic"
  }
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.01
    }
  }
  bias_param {
    filler {
      value: 0
    }
  }
  fixed_precision: true
  precision {
    enter: 1
    fraccio: 9
    rounding: "stochastic"
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
  bias_param {
    filler {
      value: 0
    }
  }
  fixed_precision: true
  precision {
    enter: 1
    fraccio: 9
    rounding: "stochastic"
  }
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.01
    }
  }
  bias_param {
    filler {
      value: 0
    }
  }
  fixed_precision: true
  precision {
    enter: 1
    fraccio: 9
    rounding: "stochastic"
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
  fixed_precision: true
  precision {
    enter: 1
    fraccio: 9
    rounding: "stochastic"
  }
}
I0404 16:34:36.097264  4509 layer_factory.hpp:77] Creating layer mnist
I0404 16:34:36.097369  4509 db_lmdb.cpp:35] Opened lmdb data/mnist_train_lmdb
I0404 16:34:36.097396  4509 net.cpp:84] Creating Layer mnist
I0404 16:34:36.097407  4509 net.cpp:380] mnist -> data
I0404 16:34:36.097434  4509 net.cpp:380] mnist -> label
I0404 16:34:36.097466  4509 data_layer.cpp:45] output data size: 100,1,28,28
I0404 16:34:36.098948  4509 net.cpp:122] Setting up mnist
I0404 16:34:36.098973  4509 net.cpp:129] Top shape: 100 1 28 28 (78400)
I0404 16:34:36.098981  4509 net.cpp:129] Top shape: 100 (100)
I0404 16:34:36.098989  4509 net.cpp:137] Memory required for data: 628000
I0404 16:34:36.098999  4509 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0404 16:34:36.099012  4509 net.cpp:84] Creating Layer label_mnist_1_split
I0404 16:34:36.099020  4509 net.cpp:406] label_mnist_1_split <- label
I0404 16:34:36.099035  4509 net.cpp:380] label_mnist_1_split -> label_mnist_1_split_0
I0404 16:34:36.099045  4509 net.cpp:380] label_mnist_1_split -> label_mnist_1_split_1
I0404 16:34:36.099057  4509 net.cpp:122] Setting up label_mnist_1_split
I0404 16:34:36.099066  4509 net.cpp:129] Top shape: 100 (100)
I0404 16:34:36.099073  4509 net.cpp:129] Top shape: 100 (100)
I0404 16:34:36.099079  4509 net.cpp:137] Memory required for data: 629600
I0404 16:34:36.099086  4509 layer_factory.hpp:77] Creating layer ip1
I0404 16:34:36.099099  4509 net.cpp:84] Creating Layer ip1
I0404 16:34:36.099105  4509 net.cpp:406] ip1 <- data
I0404 16:34:36.099114  4509 net.cpp:380] ip1 -> ip1
I0404 16:34:36.199709  4509 net.cpp:122] Setting up ip1
I0404 16:34:36.199746  4509 net.cpp:129] Top shape: 100 1000 (100000)
I0404 16:34:36.199753  4509 net.cpp:137] Memory required for data: 1429600
I0404 16:34:36.199769  4509 layer_factory.hpp:77] Creating layer relu1
I0404 16:34:36.199780  4509 net.cpp:84] Creating Layer relu1
I0404 16:34:36.199785  4509 net.cpp:406] relu1 <- ip1
I0404 16:34:36.199792  4509 net.cpp:367] relu1 -> ip1 (in-place)
I0404 16:34:36.199810  4509 net.cpp:122] Setting up relu1
I0404 16:34:36.199815  4509 net.cpp:129] Top shape: 100 1000 (100000)
I0404 16:34:36.199818  4509 net.cpp:137] Memory required for data: 2229600
I0404 16:34:36.199822  4509 layer_factory.hpp:77] Creating layer ip2
I0404 16:34:36.199831  4509 net.cpp:84] Creating Layer ip2
I0404 16:34:36.199834  4509 net.cpp:406] ip2 <- ip1
I0404 16:34:36.199841  4509 net.cpp:380] ip2 -> ip2
I0404 16:34:36.284788  4509 net.cpp:122] Setting up ip2
I0404 16:34:36.284834  4509 net.cpp:129] Top shape: 100 1000 (100000)
I0404 16:34:36.284843  4509 net.cpp:137] Memory required for data: 3029600
I0404 16:34:36.284857  4509 layer_factory.hpp:77] Creating layer relu2
I0404 16:34:36.284870  4509 net.cpp:84] Creating Layer relu2
I0404 16:34:36.284875  4509 net.cpp:406] relu2 <- ip2
I0404 16:34:36.284883  4509 net.cpp:367] relu2 -> ip2 (in-place)
I0404 16:34:36.284900  4509 net.cpp:122] Setting up relu2
I0404 16:34:36.284914  4509 net.cpp:129] Top shape: 100 1000 (100000)
I0404 16:34:36.284917  4509 net.cpp:137] Memory required for data: 3829600
I0404 16:34:36.284921  4509 layer_factory.hpp:77] Creating layer ip3
I0404 16:34:36.284929  4509 net.cpp:84] Creating Layer ip3
I0404 16:34:36.284932  4509 net.cpp:406] ip3 <- ip2
I0404 16:34:36.284939  4509 net.cpp:380] ip3 -> ip3
I0404 16:34:36.285842  4509 net.cpp:122] Setting up ip3
I0404 16:34:36.285876  4509 net.cpp:129] Top shape: 100 10 (1000)
I0404 16:34:36.285881  4509 net.cpp:137] Memory required for data: 3837600
I0404 16:34:36.285888  4509 layer_factory.hpp:77] Creating layer ip3_ip3_0_split
I0404 16:34:36.285895  4509 net.cpp:84] Creating Layer ip3_ip3_0_split
I0404 16:34:36.285899  4509 net.cpp:406] ip3_ip3_0_split <- ip3
I0404 16:34:36.285904  4509 net.cpp:380] ip3_ip3_0_split -> ip3_ip3_0_split_0
I0404 16:34:36.285912  4509 net.cpp:380] ip3_ip3_0_split -> ip3_ip3_0_split_1
I0404 16:34:36.285924  4509 net.cpp:122] Setting up ip3_ip3_0_split
I0404 16:34:36.285933  4509 net.cpp:129] Top shape: 100 10 (1000)
I0404 16:34:36.285938  4509 net.cpp:129] Top shape: 100 10 (1000)
I0404 16:34:36.285943  4509 net.cpp:137] Memory required for data: 3853600
I0404 16:34:36.285948  4509 layer_factory.hpp:77] Creating layer accuracy
I0404 16:34:36.285959  4509 net.cpp:84] Creating Layer accuracy
I0404 16:34:36.285966  4509 net.cpp:406] accuracy <- ip3_ip3_0_split_0
I0404 16:34:36.285974  4509 net.cpp:406] accuracy <- label_mnist_1_split_0
I0404 16:34:36.285984  4509 net.cpp:380] accuracy -> accuracy
I0404 16:34:36.285995  4509 net.cpp:122] Setting up accuracy
I0404 16:34:36.286001  4509 net.cpp:129] Top shape: (1)
I0404 16:34:36.286007  4509 net.cpp:137] Memory required for data: 3853608
I0404 16:34:36.286013  4509 layer_factory.hpp:77] Creating layer loss
I0404 16:34:36.286028  4509 net.cpp:84] Creating Layer loss
I0404 16:34:36.286036  4509 net.cpp:406] loss <- ip3_ip3_0_split_1
I0404 16:34:36.286042  4509 net.cpp:406] loss <- label_mnist_1_split_1
I0404 16:34:36.286051  4509 net.cpp:380] loss -> loss
I0404 16:34:36.286070  4509 layer_factory.hpp:77] Creating layer loss
I0404 16:34:36.286092  4509 net.cpp:122] Setting up loss
I0404 16:34:36.286098  4509 net.cpp:129] Top shape: (1)
I0404 16:34:36.286101  4509 net.cpp:132]     with loss weight 1
I0404 16:34:36.286121  4509 net.cpp:137] Memory required for data: 3853616
I0404 16:34:36.286125  4509 net.cpp:198] loss needs backward computation.
I0404 16:34:36.286129  4509 net.cpp:200] accuracy does not need backward computation.
I0404 16:34:36.286134  4509 net.cpp:198] ip3_ip3_0_split needs backward computation.
I0404 16:34:36.286139  4509 net.cpp:198] ip3 needs backward computation.
I0404 16:34:36.286141  4509 net.cpp:198] relu2 needs backward computation.
I0404 16:34:36.286146  4509 net.cpp:198] ip2 needs backward computation.
I0404 16:34:36.286149  4509 net.cpp:198] relu1 needs backward computation.
I0404 16:34:36.286152  4509 net.cpp:198] ip1 needs backward computation.
I0404 16:34:36.286159  4509 net.cpp:200] label_mnist_1_split does not need backward computation.
I0404 16:34:36.286162  4509 net.cpp:200] mnist does not need backward computation.
I0404 16:34:36.286166  4509 net.cpp:242] This network produces output accuracy
I0404 16:34:36.286170  4509 net.cpp:242] This network produces output loss
I0404 16:34:36.286180  4509 net.cpp:255] Network initialization done.
I0404 16:34:36.286231  4509 solver.cpp:173] Creating test net (#0) specified by net_param
I0404 16:34:36.286248  4509 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0404 16:34:36.286360  4509 net.cpp:51] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "data/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.01
    }
  }
  bias_param {
    filler {
      value: 0
    }
  }
  fixed_precision: true
  precision {
    enter: 1
    fraccio: 9
    rounding: "stochastic"
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
  fixed_precision: true
  precision {
    enter: 1
    fraccio: 9
    rounding: "stochastic"
  }
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.01
    }
  }
  bias_param {
    filler {
      value: 0
    }
  }
  fixed_precision: true
  precision {
    enter: 1
    fraccio: 9
    rounding: "stochastic"
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
  bias_param {
    filler {
      value: 0
    }
  }
  fixed_precision: true
  precision {
    enter: 1
    fraccio: 9
    rounding: "stochastic"
  }
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      mean: 0
      std: 0.01
    }
  }
  bias_param {
    filler {
      value: 0
    }
  }
  fixed_precision: true
  precision {
    enter: 1
    fraccio: 9
    rounding: "stochastic"
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
  fixed_precision: true
  precision {
    enter: 1
    fraccio: 9
    rounding: "stochastic"
  }
}
I0404 16:34:36.286419  4509 layer_factory.hpp:77] Creating layer mnist
I0404 16:34:36.286473  4509 db_lmdb.cpp:35] Opened lmdb data/mnist_test_lmdb
I0404 16:34:36.286487  4509 net.cpp:84] Creating Layer mnist
I0404 16:34:36.286494  4509 net.cpp:380] mnist -> data
I0404 16:34:36.286502  4509 net.cpp:380] mnist -> label
I0404 16:34:36.286516  4509 data_layer.cpp:45] output data size: 100,1,28,28
I0404 16:34:36.287261  4509 net.cpp:122] Setting up mnist
I0404 16:34:36.287276  4509 net.cpp:129] Top shape: 100 1 28 28 (78400)
I0404 16:34:36.287284  4509 net.cpp:129] Top shape: 100 (100)
I0404 16:34:36.287289  4509 net.cpp:137] Memory required for data: 628000
I0404 16:34:36.287297  4509 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0404 16:34:36.287307  4509 net.cpp:84] Creating Layer label_mnist_1_split
I0404 16:34:36.287317  4509 net.cpp:406] label_mnist_1_split <- label
I0404 16:34:36.287328  4509 net.cpp:380] label_mnist_1_split -> label_mnist_1_split_0
I0404 16:34:36.287341  4509 net.cpp:380] label_mnist_1_split -> label_mnist_1_split_1
I0404 16:34:36.287353  4509 net.cpp:122] Setting up label_mnist_1_split
I0404 16:34:36.287364  4509 net.cpp:129] Top shape: 100 (100)
I0404 16:34:36.287371  4509 net.cpp:129] Top shape: 100 (100)
I0404 16:34:36.287379  4509 net.cpp:137] Memory required for data: 629600
I0404 16:34:36.287385  4509 layer_factory.hpp:77] Creating layer ip1
I0404 16:34:36.287396  4509 net.cpp:84] Creating Layer ip1
I0404 16:34:36.287403  4509 net.cpp:406] ip1 <- data
I0404 16:34:36.287412  4509 net.cpp:380] ip1 -> ip1
I0404 16:34:36.358222  4509 net.cpp:122] Setting up ip1
I0404 16:34:36.358261  4509 net.cpp:129] Top shape: 100 1000 (100000)
I0404 16:34:36.358269  4509 net.cpp:137] Memory required for data: 1429600
I0404 16:34:36.358288  4509 layer_factory.hpp:77] Creating layer relu1
I0404 16:34:36.358302  4509 net.cpp:84] Creating Layer relu1
I0404 16:34:36.358311  4509 net.cpp:406] relu1 <- ip1
I0404 16:34:36.358321  4509 net.cpp:367] relu1 -> ip1 (in-place)
I0404 16:34:36.358335  4509 net.cpp:122] Setting up relu1
I0404 16:34:36.358345  4509 net.cpp:129] Top shape: 100 1000 (100000)
I0404 16:34:36.358351  4509 net.cpp:137] Memory required for data: 2229600
I0404 16:34:36.358357  4509 layer_factory.hpp:77] Creating layer ip2
I0404 16:34:36.358376  4509 net.cpp:84] Creating Layer ip2
I0404 16:34:36.358381  4509 net.cpp:406] ip2 <- ip1
I0404 16:34:36.358399  4509 net.cpp:380] ip2 -> ip2
I0404 16:34:36.442777  4509 net.cpp:122] Setting up ip2
I0404 16:34:36.442812  4509 net.cpp:129] Top shape: 100 1000 (100000)
I0404 16:34:36.442819  4509 net.cpp:137] Memory required for data: 3029600
I0404 16:34:36.442836  4509 layer_factory.hpp:77] Creating layer relu2
I0404 16:34:36.442852  4509 net.cpp:84] Creating Layer relu2
I0404 16:34:36.442859  4509 net.cpp:406] relu2 <- ip2
I0404 16:34:36.442869  4509 net.cpp:367] relu2 -> ip2 (in-place)
I0404 16:34:36.442883  4509 net.cpp:122] Setting up relu2
I0404 16:34:36.442891  4509 net.cpp:129] Top shape: 100 1000 (100000)
I0404 16:34:36.442898  4509 net.cpp:137] Memory required for data: 3829600
I0404 16:34:36.442903  4509 layer_factory.hpp:77] Creating layer ip3
I0404 16:34:36.442914  4509 net.cpp:84] Creating Layer ip3
I0404 16:34:36.442919  4509 net.cpp:406] ip3 <- ip2
I0404 16:34:36.442926  4509 net.cpp:380] ip3 -> ip3
I0404 16:34:36.443789  4509 net.cpp:122] Setting up ip3
I0404 16:34:36.443806  4509 net.cpp:129] Top shape: 100 10 (1000)
I0404 16:34:36.443814  4509 net.cpp:137] Memory required for data: 3837600
I0404 16:34:36.443825  4509 layer_factory.hpp:77] Creating layer ip3_ip3_0_split
I0404 16:34:36.443835  4509 net.cpp:84] Creating Layer ip3_ip3_0_split
I0404 16:34:36.443842  4509 net.cpp:406] ip3_ip3_0_split <- ip3
I0404 16:34:36.443851  4509 net.cpp:380] ip3_ip3_0_split -> ip3_ip3_0_split_0
I0404 16:34:36.443861  4509 net.cpp:380] ip3_ip3_0_split -> ip3_ip3_0_split_1
I0404 16:34:36.443873  4509 net.cpp:122] Setting up ip3_ip3_0_split
I0404 16:34:36.443883  4509 net.cpp:129] Top shape: 100 10 (1000)
I0404 16:34:36.443892  4509 net.cpp:129] Top shape: 100 10 (1000)
I0404 16:34:36.443897  4509 net.cpp:137] Memory required for data: 3853600
I0404 16:34:36.443912  4509 layer_factory.hpp:77] Creating layer accuracy
I0404 16:34:36.443923  4509 net.cpp:84] Creating Layer accuracy
I0404 16:34:36.443929  4509 net.cpp:406] accuracy <- ip3_ip3_0_split_0
I0404 16:34:36.443946  4509 net.cpp:406] accuracy <- label_mnist_1_split_0
I0404 16:34:36.443954  4509 net.cpp:380] accuracy -> accuracy
I0404 16:34:36.443965  4509 net.cpp:122] Setting up accuracy
I0404 16:34:36.443974  4509 net.cpp:129] Top shape: (1)
I0404 16:34:36.443980  4509 net.cpp:137] Memory required for data: 3853608
I0404 16:34:36.443986  4509 layer_factory.hpp:77] Creating layer loss
I0404 16:34:36.443997  4509 net.cpp:84] Creating Layer loss
I0404 16:34:36.444003  4509 net.cpp:406] loss <- ip3_ip3_0_split_1
I0404 16:34:36.444010  4509 net.cpp:406] loss <- label_mnist_1_split_1
I0404 16:34:36.444018  4509 net.cpp:380] loss -> loss
I0404 16:34:36.444031  4509 layer_factory.hpp:77] Creating layer loss
I0404 16:34:36.444051  4509 net.cpp:122] Setting up loss
I0404 16:34:36.444059  4509 net.cpp:129] Top shape: (1)
I0404 16:34:36.444064  4509 net.cpp:132]     with loss weight 1
I0404 16:34:36.444078  4509 net.cpp:137] Memory required for data: 3853616
I0404 16:34:36.444084  4509 net.cpp:198] loss needs backward computation.
I0404 16:34:36.444092  4509 net.cpp:200] accuracy does not need backward computation.
I0404 16:34:36.444098  4509 net.cpp:198] ip3_ip3_0_split needs backward computation.
I0404 16:34:36.444104  4509 net.cpp:198] ip3 needs backward computation.
I0404 16:34:36.444110  4509 net.cpp:198] relu2 needs backward computation.
I0404 16:34:36.444115  4509 net.cpp:198] ip2 needs backward computation.
I0404 16:34:36.444121  4509 net.cpp:198] relu1 needs backward computation.
I0404 16:34:36.444128  4509 net.cpp:198] ip1 needs backward computation.
I0404 16:34:36.444133  4509 net.cpp:200] label_mnist_1_split does not need backward computation.
I0404 16:34:36.444141  4509 net.cpp:200] mnist does not need backward computation.
I0404 16:34:36.444147  4509 net.cpp:242] This network produces output accuracy
I0404 16:34:36.444154  4509 net.cpp:242] This network produces output loss
I0404 16:34:36.444169  4509 net.cpp:255] Network initialization done.
I0404 16:34:36.444208  4509 solver.cpp:56] Solver scaffolding done.
I0404 16:34:36.444231  4509 caffe_double.cpp:248] Starting Optimization
I0404 16:34:36.444249  4509 solver.cpp:273] Solving LeNet
I0404 16:34:36.444254  4509 solver.cpp:274] Learning Rate Policy: inv
I0404 16:34:36.447010  4509 solver.cpp:331] Iteration 0, Testing net (#0)
I0404 16:34:36.447266  4509 solver.cpp:380] Test interrupted.
I0404 16:34:36.447286  4509 solver.cpp:448] Snapshotting to binary proto file _iter_0.caffemodel
I0404 16:34:36.486789  4509 sgd_solver.cpp:287] Snapshotting solver state to binary proto file _iter_0.solverstate
I0404 16:34:36.508412  4509 solver.cpp:295] Optimization stopped early.
I0404 16:34:36.508433  4509 caffe_double.cpp:259] Optimization Done.
