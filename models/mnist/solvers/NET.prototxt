name: "LeNet"
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "data/mnist_train_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "data/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}

layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type : "gaussian"
      mean : 0
      std : 0.01
    }
  }
   bias_param{
    filler{
        value:0
    }
  }
  fixed_precision : false
  precision{
    enter: 2
    fraccio: 10
    rounding: "stochastic"
  }
}


layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
  fixed_precision : false
  precision{
    enter:2
    fraccio: 10
    rounding: "stochastic"
  }
}


layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type : "gaussian"
      mean : 0
      std : 0.01
    }
  }
  bias_param{
    filler{
        value:0
    }
  }
  fixed_precision : false
  precision{
    enter:2
    fraccio: 10
    rounding: "stochastic"
  }
}


layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
  fixed_precision : false
   bias_param{
    filler{
        value:0
    }
  }
  precision{
    enter:2
    fraccio: 10
    rounding: "stochastic"
  }
}


layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  inner_product_param {
    num_output: 10
    weight_filler {
      type : "gaussian"
      mean : 0
      std : 0.01
    }
  }
   bias_param{
    filler{
        value:0
    }
  }
  fixed_precision : false
  precision{
    enter: 2
    fraccio: 10
    rounding: "stochastic"
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
  fixed_precision : false
  precision{
    enter:2
    fraccio: 10
    rounding: "stochastic"
  }
}
